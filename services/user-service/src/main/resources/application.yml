spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s

  application:
    name: user-service

  datasource:
    url: jdbc:postgresql://localhost:5433/user_db?sslmode=disable
    username: user_service
    password: password
    driver-class-name: org.postgresql.Driver

    # HikariCP connection pool settings
    hikari:
      connection-test-query: SELECT 1
      validation-timeout: 5000
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      auto-commit: true
      pool-name: UserServiceHikariPool

      # PostgreSQL specific optimizations
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true

  jpa:
    hibernate:
      ddl-auto: validate  # Using Flyway for migrations
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # Performance optimizations
        jdbc:
          batch_size: 25
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        # Statistics and cache
        generate_statistics: false
        cache:
          use_second_level_cache: false
          use_query_cache: false
    show-sql: true
    open-in-view: false  # Important for performance

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    # Additional Flyway settings
    baseline-version: 0
    baseline-description: "Initial baseline"
    validate-on-migrate: true
    clean-disabled: true  # Must be true in production
    out-of-order: false

    # PostgreSQL specific settings
    placeholders:
      default-schema: public

server:
  port: 8081
  # Graceful shutdown
  shutdown: graceful

  # Tomcat settings
  tomcat:
    connection-timeout: 20000
    max-connections: 8192
    accept-count: 100
    threads:
      max: 200
      min-spare: 10

# Actuator endpoints (monitoring i√ßin)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  health:
    db:
      enabled: true
    defaults:
      enabled: true

logging:
  level:
    com.fabricmanagement: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # To see parameter values
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"