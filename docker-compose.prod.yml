# ==============================================
# FABRIC MANAGEMENT SYSTEM - PRODUCTION DOCKER COMPOSE
# ==============================================

version: '3.8'

networks:
  fabric-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # ==============================================
  # DATABASE SERVICES
  # ==============================================
  postgres-db:
    image: postgres:15-alpine
    container_name: fabric-postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fabric-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ==============================================
  # CACHE & SESSION STORE
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: fabric-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - fabric-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # ==============================================
  # MESSAGE QUEUE
  # ==============================================
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: fabric-rabbitmq-prod
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - fabric-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ==============================================
  # MICROSERVICES
  # ==============================================
  auth-service:
    image: fabric-management/auth-service:latest
    container_name: fabric-auth-service-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: auth_service
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC"
    volumes:
      - app_logs:/app/logs
    networks:
      - fabric-network
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  user-service:
    image: fabric-management/user-service:latest
    container_name: fabric-user-service-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: user_service
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      AUTH_SERVICE_URL: http://auth-service:8080
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC"
    volumes:
      - app_logs:/app/logs
    networks:
      - fabric-network
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  contact-service:
    image: fabric-management/contact-service:latest
    container_name: fabric-contact-service-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: contact_service
      POSTGRES_PASSWORD: ${CONTACT_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      AUTH_SERVICE_URL: http://auth-service:8080
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC"
    volumes:
      - app_logs:/app/logs
    networks:
      - fabric-network
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  company-service:
    image: fabric-management/company-service:latest
    container_name: fabric-company-service-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: company_service
      POSTGRES_PASSWORD: ${COMPANY_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      AUTH_SERVICE_URL: http://auth-service:8080
      USER_SERVICE_URL: http://user-service:8081
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC"
    volumes:
      - app_logs:/app/logs
    networks:
      - fabric-network
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # ==============================================
  # API GATEWAY
  # ==============================================
  api-gateway:
    image: nginx:1.25-alpine
    container_name: fabric-api-gateway-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/docker/nginx-default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - fabric-network
    depends_on:
      - auth-service
      - user-service
      - contact-service
      - company-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

# ==============================================
# VOLUMES
# ==============================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  app_logs:
    driver: local
