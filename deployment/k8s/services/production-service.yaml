apiVersion: apps/v1
kind: Deployment
metadata:
  name: production-service
  namespace: fabric-management
  labels:
    app: production-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: production-service
  template:
    metadata:
      labels:
        app: production-service
        version: v1
    spec:
      containers:
        - name: production-service
          image: fabric-management/production-service:latest
          ports:
            - containerPort: 8096
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: POSTGRES_HOST
              value: "postgres-production"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "production_db"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: production-service-secrets
                  key: postgres-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: production-service-secrets
                  key: postgres-password
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: "guest"
            - name: RABBITMQ_PASSWORD
              value: "guest"
            - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
              value: "http://eureka-server:8761/eureka/"
            - name: IDENTITY_SERVICE_URL
              value: "http://identity-service:8081"
            - name: CONTACT_SERVICE_URL
              value: "http://contact-service:8083"
            - name: COMPANY_SERVICE_URL
              value: "http://company-service:8084"
            - name: ORDER_SERVICE_URL
              value: "http://order-service:8094"
            - name: INVENTORY_SERVICE_URL
              value: "http://inventory-service:8089"
            - name: CATALOG_SERVICE_URL
              value: "http://catalog-service:8090"
            - name: LOGISTICS_SERVICE_URL
              value: "http://logistics-service:8095"
            - name: QUALITY_CONTROL_SERVICE_URL
              value: "http://quality-control-service:8104"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8096
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8096
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: production-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: production-service
  namespace: fabric-management
  labels:
    app: production-service
spec:
  selector:
    app: production-service
  ports:
    - port: 8096
      targetPort: 8096
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: production-service-config
  namespace: fabric-management
data:
  application.yml: |
    server:
      port: 8096

    spring:
      application:
        name: production-service
      datasource:
        url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
        driver-class-name: org.postgresql.Driver
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
      redis:
        host: ${REDIS_HOST}
        port: ${REDIS_PORT}
        password: ""
        database: 0
      rabbitmq:
        host: ${RABBITMQ_HOST}
        port: ${RABBITMQ_PORT}
        username: ${RABBITMQ_USERNAME}
        password: ${RABBITMQ_PASSWORD}
        virtual-host: /

    eureka:
      client:
        service-url:
          defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
        register-with-eureka: true
        fetch-registry: true
      instance:
        prefer-ip-address: true
        lease-renewal-interval-in-seconds: 30
        lease-expiration-duration-in-seconds: 90

    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
      metrics:
        export:
          prometheus:
            enabled: true

    logging:
      level:
        com.fabricmanagement.production: INFO
        org.springframework.web: INFO
        org.hibernate.SQL: WARN
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
      file:
        name: /app/logs/production-service.log

    # Service URLs
    services:
      identity:
        url: ${IDENTITY_SERVICE_URL}
      contact:
        url: ${CONTACT_SERVICE_URL}
      company:
        url: ${COMPANY_SERVICE_URL}
      order:
        url: ${ORDER_SERVICE_URL}
      inventory:
        url: ${INVENTORY_SERVICE_URL}
      catalog:
        url: ${CATALOG_SERVICE_URL}
      logistics:
        url: ${LOGISTICS_SERVICE_URL}
      quality-control:
        url: ${QUALITY_CONTROL_SERVICE_URL}

    # Production Configuration
    production:
      scheduling:
        algorithm: "PRIORITY_BASED"
        buffer-time: 30
        max-concurrent-plans: 10
      quality:
        auto-inspection: true
        tolerance: 0.02
        inspection-interval: 60
      monitoring:
        real-time-updates: true
        alert-thresholds:
          efficiency: 0.80
          quality-rate: 0.95
          machine-utilization: 0.90
      machines:
        maintenance:
          auto-schedule: true
          warning-days: 7
          critical-days: 3
---
apiVersion: v1
kind: Secret
metadata:
  name: production-service-secrets
  namespace: fabric-management
type: Opaque
data:
  postgres-username: cHJvZHVjdGlvbl91c2Vy # production_user
  postgres-password: cHJvZHVjdGlvbl9wYXNz # production_pass
