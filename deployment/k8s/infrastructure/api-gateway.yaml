apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: fabric-management
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: fabric-management
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: fabric-management
data:
  default.conf: |
    upstream auth-service {
        server auth-service:8081;  # Using exact port from application.yml
    }
    
    upstream user-service {
        server user-service:8082;  # Using exact port from application.yml
    }
    
    upstream company-service {
        server company-service:8083;  # Using exact port from application.yml
    }
    
    upstream contact-service {
        server contact-service:8084;  # Using exact port from application.yml
    }
    
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Auth Service - Port 8081
        location /api/v1/auth/ {
            proxy_pass http://auth-service/api/v1/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # User Service - Port 8082
        location /api/v1/users/ {
            proxy_pass http://user-service/api/v1/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Company Service - Port 8083
        location /api/v1/companies/ {
            proxy_pass http://company-service/api/v1/companies/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Contact Service - Port 8084
        location /api/v1/contacts/ {
            proxy_pass http://contact-service/api/v1/contacts/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Default location
        location / {
            return 404;
        }
    }
