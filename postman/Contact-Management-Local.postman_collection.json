{
  "info": {
    "_postman_id": "contact-management-local-v3",
    "name": "Contact Management - Local (v3.1)",
    "description": "Contact & Address Service API - Complete CRUD operations\n\nâœ… Updated for v3.1.0:\n- Address CRUD (new separate table)\n- Phone Extension support\n- Correlation ID tracking\n- Clean test scripts",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "3.1.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "companyId",
      "value": "",
      "type": "string"
    },
    {
      "key": "contactId",
      "value": "",
      "type": "string"
    },
    {
      "key": "addressId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const res = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', res.data.accessToken);",
                  "    pm.collectionVariables.set('userId', res.data.userId);",
                  "    pm.collectionVariables.set('companyId', res.data.companyId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contactValue\": \"admin@acmetekstil.com\",\n  \"password\": \"AcmeAdmin@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Contact Operations",
      "item": [
        {
          "name": "Get User Contacts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/owner/{{userId}}?ownerType=USER",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "owner", "{{userId}}"],
              "query": [{ "key": "ownerType", "value": "USER" }]
            }
          }
        },
        {
          "name": "Get Company Contacts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/owner/{{companyId}}?ownerType=COMPANY",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "owner", "{{companyId}}"],
              "query": [{ "key": "ownerType", "value": "COMPANY" }]
            }
          }
        },
        {
          "name": "Create Phone Contact",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201 or 200', () => {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));",
                  "",
                  "if ([200, 201].includes(pm.response.code)) {",
                  "    const res = pm.response.json();",
                  "    pm.collectionVariables.set('contactId', res.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": \"{{userId}}\",\n  \"ownerType\": \"USER\",\n  \"contactType\": \"PHONE\",\n  \"contactValue\": \"+905559998877\",\n  \"isPrimary\": false,\n  \"autoVerified\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts"]
            }
          }
        },
        {
          "name": "Create Phone Extension",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201 or 200', () => {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": \"{{userId}}\",\n  \"ownerType\": \"USER\",\n  \"contactType\": \"PHONE_EXTENSION\",\n  \"contactValue\": \"101\",\n  \"parentContactId\": \"{{contactId}}\",\n  \"isPrimary\": false,\n  \"autoVerified\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts"]
            },
            "description": "ðŸ†• Phone Extension - Links to parent phone contact"
          }
        },
        {
          "name": "Update Contact",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contactValue\": \"+905559998888\",\n  \"isPrimary\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/{{contactId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "{{contactId}}"]
            }
          }
        },
        {
          "name": "Set as Primary",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200 or 204', () => {",
                  "    pm.expect([200, 204]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/{{contactId}}/primary",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "{{contactId}}", "primary"]
            }
          }
        },
        {
          "name": "Delete Contact",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200 or 204', () => {",
                  "    pm.expect([200, 204]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/{{contactId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "{{contactId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Address Operations (v3.0 - New!)",
      "item": [
        {
          "name": "Get User Addresses",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/addresses/owner/{{userId}}?ownerType=USER",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "v1",
                "contacts",
                "addresses",
                "owner",
                "{{userId}}"
              ],
              "query": [{ "key": "ownerType", "value": "USER" }]
            },
            "description": "ðŸ†• v3.0 - Addresses in separate table"
          }
        },
        {
          "name": "Get Company Addresses",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/addresses/owner/{{companyId}}?ownerType=COMPANY",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "v1",
                "contacts",
                "addresses",
                "owner",
                "{{companyId}}"
              ],
              "query": [{ "key": "ownerType", "value": "COMPANY" }]
            }
          }
        },
        {
          "name": "Create Address",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201 or 200', () => {",
                  "    pm.expect([200, 201]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));",
                  "",
                  "if ([200, 201].includes(pm.response.code)) {",
                  "    const res = pm.response.json();",
                  "    pm.collectionVariables.set('addressId', res.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": \"{{userId}}\",\n  \"ownerType\": \"USER\",\n  \"addressLine1\": \"BaÄŸdat Caddesi No:123\",\n  \"addressLine2\": \"Daire:5\",\n  \"city\": \"Ä°stanbul\",\n  \"district\": \"KadÄ±kÃ¶y\",\n  \"postalCode\": \"34710\",\n  \"country\": \"Turkey\",\n  \"addressType\": \"HOME\",\n  \"isPrimary\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "addresses"]
            },
            "description": "ðŸ†• v3.0 - Create address in separate table"
          }
        },
        {
          "name": "Update Address",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": \"{{userId}}\",\n  \"ownerType\": \"USER\",\n  \"addressLine1\": \"BaÄŸdat Caddesi No:125\",\n  \"addressLine2\": \"Daire:7\",\n  \"city\": \"Ä°stanbul\",\n  \"district\": \"KadÄ±kÃ¶y\",\n  \"postalCode\": \"34710\",\n  \"country\": \"Turkey\",\n  \"addressType\": \"HOME\",\n  \"isPrimary\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/addresses/{{addressId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "addresses", "{{addressId}}"]
            }
          }
        },
        {
          "name": "Set Address as Primary",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200 or 204', () => {",
                  "    pm.expect([200, 204]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/addresses/{{addressId}}/set-primary",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "v1",
                "contacts",
                "addresses",
                "{{addressId}}",
                "set-primary"
              ]
            }
          }
        },
        {
          "name": "Delete Address",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200 or 204', () => {",
                  "    pm.expect([200, 204]).to.include(pm.response.code);",
                  "});",
                  "pm.test('Has correlation ID', () => pm.response.to.have.header('X-Correlation-ID'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                { "key": "token", "value": "{{accessToken}}", "type": "string" }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/contacts/addresses/{{addressId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "contacts", "addresses", "{{addressId}}"]
            }
          }
        }
      ]
    }
  ]
}
