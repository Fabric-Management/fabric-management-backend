# =============================================================================
# FABRIC MANAGEMENT SYSTEM - MONITORING STACK
# =============================================================================
# Prometheus, Grafana, and exporters for comprehensive monitoring

version: "3.8"

networks:
  fabric-network:
    external: true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services:
  # =============================================================================
  # PROMETHEUS - Metrics Collection
  # =============================================================================
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: fabric-prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - fabric-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:9090/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # GRAFANA - Visualization
  # =============================================================================
  grafana:
    image: grafana/grafana:10.2.2
    container_name: fabric-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - fabric-network
    depends_on:
      - prometheus
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # POSTGRES EXPORTER - Database Metrics
  # =============================================================================
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: fabric-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-fabric_user}:${POSTGRES_PASSWORD:-fabric_password}@postgres:5432/${POSTGRES_DB:-fabric_management}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - fabric-network
    depends_on:
      - prometheus

  # =============================================================================
  # REDIS EXPORTER - Cache Metrics
  # =============================================================================
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0
    container_name: fabric-redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: "${REDIS_PASSWORD:-}"
    ports:
      - "9121:9121"
    networks:
      - fabric-network
    depends_on:
      - prometheus

  # =============================================================================
  # NODE EXPORTER - System Metrics
  # =============================================================================
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: fabric-node-exporter
    restart: unless-stopped
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - fabric-network
