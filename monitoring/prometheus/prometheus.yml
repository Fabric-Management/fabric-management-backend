# =====================================================
# Prometheus Configuration
# =====================================================
# Scrapes metrics from all microservices via Actuator
# "Measure first, optimize second" - Golden Rule

global:
  scrape_interval: ${PROMETHEUS_SCRAPE_INTERVAL:-15s}
  evaluation_interval: ${PROMETHEUS_EVAL_INTERVAL:-15s}
  external_labels:
    cluster: "fabric-management"
    environment: "${ENVIRONMENT:-docker}"

# Alert rules
rule_files:
  - "/etc/prometheus/alerts.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - "alertmanager:9093"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]

  # API Gateway (Spring WebFlux)
  - job_name: "api-gateway"
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ["api-gateway:8080"]
        labels:
          service: "api-gateway"
          tier: "gateway"
    scrape_interval: 10s # Faster scraping for gateway

  # User Service
  - job_name: "user-service"
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ["user-service:8081"]
        labels:
          service: "user-service"
          tier: "microservice"
          domain: "user-management"

  # Company Service
  - job_name: "company-service"
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ["company-service:8083"]
        labels:
          service: "company-service"
          tier: "microservice"
          domain: "company-management"

  # Contact Service
  - job_name: "contact-service"
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ["contact-service:8082"]
        labels:
          service: "contact-service"
          tier: "microservice"
          domain: "contact-management"

  # Notification Service
  - job_name: "notification-service"
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ["notification-service:8084"]
        labels:
          service: "notification-service"
          tier: "microservice"
          domain: "notifications"

  # Fiber Service (Production Textile Service)
  - job_name: "fiber-service"
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ["fiber-service:8094"]
        labels:
          service: "fiber-service"
          tier: "microservice"
          domain: "textile-production"

  # PostgreSQL Exporter (Optional - install postgres_exporter if needed)
  # - job_name: 'postgres'
  #   static_configs:
  #     - targets: ['postgres-exporter:9187']
  #       labels:
  #         service: 'postgresql'
  #         tier: 'database'

  # Redis Exporter (Optional - install redis_exporter if needed)
  # - job_name: 'redis'
  #   static_configs:
  #     - targets: ['redis-exporter:9121']
  #       labels:
  #         service: 'redis'
  #         tier: 'cache'
