spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      ssl: true
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: fabric-management-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3

  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        generate_statistics: false

logging:
  level:
    root: WARN
    com.fabricmanagement: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate: WARN
  file:
    name: /var/log/fabric-management/application.log
    max-size: 100MB
    max-history: 30

server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  http2:
    enabled: true

application:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 900000 # 15 minutes
    refresh-expiration: 604800000 # 7 days

