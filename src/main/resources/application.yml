spring:
  application:
    name: fabric-management-system

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${HIBERNATE_FORMAT_SQL:true}
        use_sql_comments: ${HIBERNATE_USE_COMMENTS:true}
        jdbc:
          batch_size: ${HIBERNATE_BATCH_SIZE:20}
        order_inserts: ${HIBERNATE_ORDER_INSERTS:true}
        order_updates: ${HIBERNATE_ORDER_UPDATES:true}
    show-sql: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=${CACHE_MAX_SIZE:10000},expireAfterWrite=${CACHE_EXPIRE_SECONDS:300}s

  servlet:
    multipart:
      enabled: true
      max-file-size: ${MULTIPART_MAX_FILE_SIZE:25MB}
      max-request-size: ${MULTIPART_MAX_REQUEST_SIZE:25MB}
      file-size-threshold: ${MULTIPART_FILE_SIZE_THRESHOLD:2MB}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  compression:
    enabled: ${SERVER_COMPRESSION_ENABLED:true}
    mime-types: ${SERVER_COMPRESSION_MIME_TYPES:text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json}
    min-response-size: ${SERVER_COMPRESSION_MIN_SIZE:1024}

# Management & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# Application Info
info:
  app:
    name: ${spring.application.name}
    description: ${APP_DESCRIPTION:Modular Monolith Fabric Management System}
    version: ${APP_VERSION:1.0.0}
    architecture: ${APP_ARCHITECTURE:Modular Monolith}
    encoding: ${project.build.sourceEncoding:UTF-8}
    java:
      version: ${java.version:21}

# Logging
logging:
  level:
    root: INFO
    com.fabricmanagement: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Properties
application:
  name: Fabric Management System
  version: 1.0.0
  architecture: modular-monolith

  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:YourSecretKeyMustBe256BitsLongForHS256AlgorithmToWorkProperly}
    expiration: ${JWT_EXPIRATION:900000} # 15 minutes
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days

  # Tenant Configuration
  tenant:
    default-tenant-id: ${DEFAULT_TENANT_ID:00000000-0000-0000-0000-000000000000}

  # Mail Configuration
  mail:
    from-email: ${MAIL_FROM_EMAIL:noreply@fabricmanagement.com}
    from-name: ${MAIL_FROM_NAME:Fabric Management}

  # Email Template Configuration
  # Note: Frontend pi email render endpoint removed - backend uses its own HTML templates
  email:
    # Template provider: "auto" (smart fallback), "frontend", or "backend"
    template-provider: ${EMAIL_TEMPLATE_PROVIDER:backend} # ✅ Backend templates only (frontend endpoint removed)
    frontend:
      enabled: ${EMAIL_FRONTEND_ENABLED:false} # ✅ Disabled (frontend endpoint removed)
      timeout-ms: ${EMAIL_FRONTEND_TIMEOUT_MS:5000}
      url: ${FRONTEND_URL:${APP_BASE_URL:http://localhost:3000}}

  # Verification Configuration
  verification:
    code-length: 6
    code-expiry-minutes: 10
    max-attempts: 3
    resend-delay-seconds: 60

  # Policy Configuration
  policy:
    cache-ttl-seconds: 300 # 5 minutes
    default-decision: DENY
    evaluation-timeout-ms: 1000

  # Event Configuration
  events:
    async-enabled: true
    outbox-enabled: true
    outbox-batch-size: 100
    outbox-poll-interval-ms: 5000

  # AI Configuration
  ai:
    provider: ${AI_PROVIDER:openai} # openai | anthropic | local
    api-key: ${AI_API_KEY:} # From .env
    model: ${AI_MODEL:gpt-4o-mini} # gpt-4o-mini | claude-3-haiku
    temperature: ${AI_TEMPERATURE:0.7}
    max-tokens: ${AI_MAX_TOKENS:1000}
    timeout: ${AI_TIMEOUT:30000} # 30 seconds
    enabled: ${AI_ENABLED:true}

  # Google Maps Platform Configuration
  google:
    maps:
      api-key: ${GOOGLE_MAPS_API_KEY:}
      enabled: ${GOOGLE_MAPS_ENABLED:true}
      timeout: ${GOOGLE_MAPS_TIMEOUT:10000}
      region-bias: ${GOOGLE_MAPS_REGION_BIAS:TR,GB,DE,FR,IT,ES}

# OpenAPI / Swagger
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: false
